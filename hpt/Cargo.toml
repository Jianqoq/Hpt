
[package]
name = "hpt"
version = "0.0.21"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["JianJian Li <ljj1849532909@gmail.com>"]
description = "High Performance Tensor (HPT) - A fast, efficient, and user-friendly tensor computation library for Rust"
repository = "https://github.com/Jianqoq/Hpt"

[dependencies]
hpt-types = { path = "../hpt-types", version = "0.0.21" }
hpt-common = { path = "../hpt-common", version = "0.0.21" }
hpt-iterator = { path = "../hpt-iterator", version = "0.0.21" }
hpt-traits = { path = "../hpt-traits", version = "0.0.21" }
hpt-allocator = { path = "../hpt-allocator", version = "0.0.21" }
hpt-macros = { path = "../hpt-macros", version = "0.0.21" }
hpt-display = { path = "../hpt-display", version = "0.0.21" }
hpt-dataloader = { path = "../hpt-dataloader", version = "0.0.21" }
hpt-cudakernels = { path = "../hpt-cudakernels", version = "0.0.19", optional = true }
gemm = { workspace = true }
dyn-stack = { workspace = true }
flate2 = { workspace = true }
rand_distr = { workspace = true }
rustfft = { workspace = true }
rand = { workspace = true }
threadpool = { workspace = true }
paste = { workspace = true }
rayon = { workspace = true }
num = { workspace = true }
duplicate = { workspace = true }
ctor = { workspace = true }
cache-size = { workspace = true }
half = { workspace = true }
num_cpus = { workspace = true }
once_cell = { workspace = true }
cudarc = { workspace = true, optional = true }
regex = { workspace = true, optional = true }
phf = { workspace = true, optional = true }
serde = { workspace = true }
safetensors = { workspace = true }
bytemuck = { workspace = true }
gemm-common = { workspace = true }
seq-macro = { workspace = true }

[target.'cfg(target_arch = "x86_64")'.dependencies]
raw-cpuid = { version = "11.3.0", default-features = false }

[features]
default = ["track_caller", "normal_promote"]
track_caller = [
    "hpt-traits/track_caller",
    "hpt-common/track_caller",
    "hpt-iterator/track_caller",
]
bound_check = ["hpt-common/bound_check", "hpt-iterator/bound_check"]
cuda = [
    "cudarc",
    "hpt-allocator/cuda",
    "regex",
    "hpt-cudakernels/cuda",
    "hpt-common/cuda",
    "phf",
    "hpt-types/cuda",
    "hpt-macros/cuda",
]
normal_promote = ["hpt-types/normal_promote"]

[package.metadata.rust-analyzer]
rustc_private = true
proc_macro_srv = true
