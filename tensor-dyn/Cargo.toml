
[package]
name = "tensor-dyn"
version = "0.1.0"
edition = "2021"

[dependencies]
tensor-types = { path = "../tensor-types" }
tensor-common = { path = "../tensor-common" }
tensor-iterator = { path = "../tensor-iterator" }
tensor-traits = { path = "../tensor-traits" }
tensor-allocator = { path = "../tensor-allocator" }
tensor-macros = { path = "../tensor-macros" }
tensor-display = { path = "../tensor-display" }
tensor-codegen = { path = "../tensor-codegen" }
tensor-cudakernels = { path = "../tensor-cudakernels", optional = true }
rand_distr = "0.4.3"
rustfft = "6.1.0"
rand = "0.8.5"
threadpool = "1.8.1"
paste = "1.0.15"
anyhow = "1.0.75"
rayon = "1.8.0"
num = "0.4.1"
duplicate = "2.0.0"
ctor = "0.2.8"
cpuid = "0.1.1"
cache-size = "0.7.0"
half = { version = "2.3.1", features = ["num-traits", "rand_distr"] }
gemm = { version = "0.18.0", features = ["rayon"] }
num_cpus = "1.16.0"
once_cell = "1.19.0"
cudarc = { version = "0.12.1", optional = true, features = [
    "cuda-12010",
    "f16",
] }
regex = { version = "1.11.1", optional = true }
bindgen_cuda = { version = "0.1.5", optional = true }
phf = { version = "0.11.1", optional = true }
xxhash-rust = { version = "0.8.12", optional = true, features = ["xxh64"] }

[target.'cfg(target_arch = "x86_64")'.dependencies]
raw-cpuid = { version = "11.2.0", default-features = false }

[features]
default = ["track_caller", "archsimd"]
track_caller = [
    "tensor-traits/track_caller",
    "tensor-common/track_caller",
    "tensor-iterator/track_caller",
]
bound_check = ["tensor-common/bound_check", "tensor-iterator/bound_check"]
stdsimd = ["tensor-types/stdsimd", "tensor-traits/stdsimd"]
archsimd = ["tensor-types/archsimd", "tensor-traits/archsimd"]
cuda = [
    "cudarc",
    "bindgen_cuda",
    "tensor-allocator/cuda",
    "regex",
    "tensor-cudakernels/cuda",
    "phf",
    "xxhash-rust",
    "tensor-types/cuda",
]

[package.metadata.rust-analyzer]
rustc_private = true
proc_macro_srv = true
