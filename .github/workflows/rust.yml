name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  LIBTORCH: ~/libtorch/libtorch
  LIBTORCH_INCLUDE: $LIBTORCH/include
  LIBTORCH_LIB: $LIBTORCH/lib
  LD_LIBRARY_PATH: $LIBTORCH_LIB:$LD_LIBRARY_PATH
  CMAKE_PREFIX_PATH: $LIBTORCH

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true  # Use nightly for the entire workflow
        components: clippy, rustfmt  # Optional: add useful components
    - name: build torch
      run: |
        wget https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-2.4.0%2Bcpu.zip
        unzip libtorch-shared-with-deps-2.4.0+cpu.zip -d ~/libtorch
        export LIBTORCH=~/libtorch/libtorch
        export LIBTORCH_INCLUDE=$LIBTORCH
        export LIBTORCH_LIB=$LIBTORCH
        export LD_LIBRARY_PATH=$LIBTORCH_LIB:$LD_LIBRARY_PATH
    - name: Build
      run: |
        cd tensor-tests
        cargo build --verbose
      env:
        LIBTORCH: ~/libtorch/libtorch
        LIBTORCH_INCLUDE: $LIBTORCH/include
        LIBTORCH_LIB: $LIBTORCH/lib
        LD_LIBRARY_PATH: $LIBTORCH_LIB:$LD_LIBRARY_PATH
        CMAKE_PREFIX_PATH: $LIBTORCH
    - name: Run tests
      run: |
        cd tensor-tests
        cargo test --verbose
      env:
        LIBTORCH: ~/libtorch/libtorch
        LIBTORCH_INCLUDE: $LIBTORCH/include
        LIBTORCH_LIB: $LIBTORCH/lib
        LD_LIBRARY_PATH: $LIBTORCH_LIB:$LD_LIBRARY_PATH
        CMAKE_PREFIX_PATH: $LIBTORCH
