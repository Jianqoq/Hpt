name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    - name: Cache Cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: clippy, rustfmt 
    - name: Run tests
      run: |
        cd tensor-tests
        RUST_BACKTRACE=full cargo test --verbose -- --nocapture
    - name: Debug with GDB on failure
      if: failure()
      run: |
        for test_bin in target/debug/deps/*; do
          if [[ -x "$test_bin" ]]; then
            echo "Running GDB on $test_bin"
            gdb --batch -ex "run" -ex "bt" "$test_bin"
          fi
        done