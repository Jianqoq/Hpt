import{_ as t,c as o,d as r,o as p}from"./app-smAh7eZf.js";const s={};function a(n,e){return p(),o("div",null,e[0]||(e[0]=[r('<h1>Custom Type</h1><p>Since hpt is designed in purely generic types, the user can define their own type and can use custom type to do all the computation hpt supports.</p><h1>How</h1><p>You can reference the steps at <a href="https://github.com/Jianqoq/Hpt/tree/main/hpt-examples/examples/custom_type/main.rs" target="_blank" rel="noopener noreferrer">here</a>.</p><h1>Note</h1><p>For now, your custom type must implemented <code>Copy</code> trait. The reason why hpt doesn&#39;t support type with only <code>Clone</code> is because of the conv2d implementation issue. The conv2d used fixed size array to preallocate registers <code>[T; N]</code>, and this requires <code>T</code> implemented <code>Copy</code> trait.</p><h2>Backend Support</h2><table><thead><tr><th>Backend</th><th>Supported</th></tr></thead><tbody><tr><td>CPU</td><td>✅</td></tr><tr><td>Cuda</td><td>❌</td></tr></tbody></table>',8)]))}const c=t(s,[["render",a],["__file","custom_type.html.vue"]]),i=JSON.parse('{"path":"/user_guide/custom_type/custom_type.html","title":"Custom Type","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Backend Support","slug":"backend-support","link":"#backend-support","children":[]}],"git":{"updatedTime":1739987937000,"contributors":[{"name":"Jianqoq","username":"Jianqoq","email":"120760306+Jianqoq@users.noreply.github.com","commits":1,"url":"https://github.com/Jianqoq"}]},"filePathRelative":"user_guide/custom_type/custom_type.md"}');export{c as comp,i as data};
