import{_ as e,c as s,d as a,o}from"./app-CZ_qsLqA.js";const t={};function p(i,n){return o(),s("div",null,n[0]||(n[0]=[a(`<h1>Type Promote</h1><h3>Things to know</h3><p>The type promotion system in Hpt handles type conversions and operations between different numeric types. It is implemented in <code>tensor-types</code> crate.</p><h3>Implementation</h3><p>The implementation is straightforward. See <a href="https://github.com/Jianqoq/Hpt/tree/main/hpt-types/src/promotion" target="_blank" rel="noopener noreferrer">here</a></p><h3>Note</h3><p>Current implementation only supports one type of promotion. Like u32 + i32 = i32. We may want to have multiple version of promotion. The user may want u32 + i32 = i64. Adding new version is straightforward and just simply using the existing code and do little modification.</p><h3>How</h3><ol><li>create a new feature that the user can choose in file <code>hpt-types/Cargo.toml</code></li></ol><div class="language-cargo line-numbers-mode" data-highlighter="prismjs" data-ext="cargo"><pre><code><span class="line">[features]</span>
<span class="line">.. // features</span>
<span class="line">default = [.., &quot;normal_promote&quot;]</span>
<span class="line">normal_promote = []</span>
<span class="line">// new_promote = []</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>Go to <code>hpt-types/src/promotion</code>, create a new folder, like <code>new_promote/</code></p></li><li><p>create files under <code>hpt-types/src/promotion/new_promote/</code> like how we create in <code>hpt-types/src/promotion/normal_promote/</code>, then write promotion logic for the new promote.</p></li><li><p>Go to <code>lib.rs</code> and add new <code>mod</code> in promotion mod</p></li></ol><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">pub</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">promotion</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute attr-name">#[cfg(feature = <span class="token string">&quot;normal_promote&quot;</span>)]</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">normal_promote</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">..</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token attribute attr-name">#[cfg(feature = <span class="token string">&quot;new_promote&quot;</span>)]</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">new_promote</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">..</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">mod</span> <span class="token module-declaration namespace">utils</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Adding feature for the promotion, the user enable the specific feature. Then they can use the specific type of promotion.</p>`,13)]))}const r=e(t,[["render",p]]),c=JSON.parse('{"path":"/dev_guide/type_promote.html","title":"Type Promote","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1745030262000,"contributors":[{"name":"Jianqoq","username":"Jianqoq","email":"120760306+Jianqoq@users.noreply.github.com","commits":1,"url":"https://github.com/Jianqoq"}],"changelog":[{"hash":"2070c4e5cc505acf63902dfed1ccaee672a87e43","time":1745030262000,"email":"120760306+Jianqoq@users.noreply.github.com","author":"Jianqoq","message":"Merge pull request #180 from Jianqoq/Jianqoq"}]},"filePathRelative":"dev_guide/type_promote.md"}');export{r as comp,c as data};
