import{_ as s,c as a,d as e,o as p}from"./app-DXqrPI4k.js";const t={};function o(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1>ones_like</h1><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token function">ones_like</span><span class="token punctuation">(</span></span>
<span class="line">    x<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Tensor</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Tensor</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">TensorError</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Creates a new tensor filled with ones with the same shape as the input tensor.</p><h2>Parameters:</h2><p><code>x</code>: The input tensor whose shape will be used.</p><h2>Returns:</h2><p>A new tensor of ones with the same shape as the input tensor.</p><h2>Examples:</h2><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">hpt<span class="token punctuation">::</span></span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token namespace">error<span class="token punctuation">::</span></span><span class="token class-name">TensorError</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token namespace">ops<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">ShapeManipulate</span><span class="token punctuation">,</span> <span class="token class-name">TensorCreator</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Tensor</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TensorError</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Create a tensor</span></span>
<span class="line">    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token class-name">Tensor</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">f32</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;a: {}&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// [[1, 2],</span></span>
<span class="line">    <span class="token comment">//  [3, 4]]</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Create a tensor of ones with same shape</span></span>
<span class="line">    <span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">ones_like</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;b: {}&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// [[1, 1],</span></span>
<span class="line">    <span class="token comment">//  [1, 1]]</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>Backend Support</h2><table><thead><tr><th>Backend</th><th>Supported</th></tr></thead><tbody><tr><td>CPU</td><td>✅</td></tr><tr><td>Cuda</td><td>✅</td></tr></tbody></table>`,11)]))}const i=s(t,[["render",o]]),u=JSON.parse('{"path":"/user_guide/creation/ones_like.html","title":"ones_like","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1744835383000,"contributors":[{"name":"Jianqoq","username":"Jianqoq","email":"ljj1849532909@gmail.com","commits":1,"url":"https://github.com/Jianqoq"}],"changelog":[{"hash":"ee8463f9187eff59dd5650a34a651d2c879e0a5d","time":1744835383000,"email":"ljj1849532909@gmail.com","author":"Jianqoq","message":"Update .gitignore and remove package-lock.json"}]},"filePathRelative":"user_guide/creation/ones_like.md"}');export{i as comp,u as data};
