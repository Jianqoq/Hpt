import{_ as n,c as a,a as p,o as e}from"./app-D4Sy2iv7.js";const t={};function o(c,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h1>logspace</h1><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token function">logspace</span><span class="token punctuation">(</span></span>
<span class="line">    start<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span></span>
<span class="line">    end<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span></span>
<span class="line">    num<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">    include_end<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">,</span></span>
<span class="line">    base<span class="token punctuation">:</span> <span class="token class-name">T</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Tensor</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">TensorError</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">where</span></span>
<span class="line">    <span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Float</span> <span class="token operator">+</span> <span class="token class-name">FromScalar</span><span class="token operator">&lt;</span><span class="token keyword">f64</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Creates a 1-D tensor with <code>num</code> numbers logarithmically spaced between <code>base^start</code> and <code>base^end</code>.</p><h2>Parameters:</h2><p><code>start</code>: The starting value of the sequence (power of base)</p><p><code>end</code>: The end value of the sequence (power of base)</p><p><code>num</code>: Number of samples to generate</p><p><code>include_end</code>: Whether to include the end value in the sequence</p><p><code>base</code>: The base of the log space (default is 10.0)</p><h2>Returns:</h2><p>A 1-D tensor of logarithmically spaced values.</p><h2>Examples:</h2><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">hpt<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token namespace">error<span class="token punctuation">::</span></span><span class="token class-name">TensorError</span><span class="token punctuation">,</span> <span class="token namespace">ops<span class="token punctuation">::</span></span><span class="token class-name">TensorCreator</span><span class="token punctuation">,</span> <span class="token class-name">Tensor</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TensorError</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Create 4 points from 10^0 to 10^3</span></span>
<span class="line">    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token class-name">Tensor</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">f32</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">logspace</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// [1.0, 10.0, 100.0, 1000.0]</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Using base 2</span></span>
<span class="line">    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token class-name">Tensor</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">f32</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">logspace</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// [1.0, 2.0, 4.0, 8.0]</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Excluding end point</span></span>
<span class="line">    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token class-name">Tensor</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">f32</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">logspace</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// [1.0, 3.1623, 10.0, 31.6228]</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>Backend Support</h2><table><thead><tr><th>Backend</th><th>Supported</th></tr></thead><tbody><tr><td>CPU</td><td>✅</td></tr><tr><td>Cuda</td><td>✅</td></tr></tbody></table>`,15)]))}const i=n(t,[["render",o]]),u=JSON.parse('{"path":"/user_guide/creation/logspace.html","title":"logspace","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1745005839000,"contributors":[{"name":"Jianqoq","username":"Jianqoq","email":"120760306+Jianqoq@users.noreply.github.com","commits":1,"url":"https://github.com/Jianqoq"}],"changelog":[{"hash":"ff574f9d0bd49c584b0c1f7d11c7d51e90cde038","time":1745005839000,"email":"120760306+Jianqoq@users.noreply.github.com","author":"Jianqoq","message":"Merge pull request #179 from Jianqoq/Jianqoq"}]},"filePathRelative":"user_guide/creation/logspace.md"}');export{i as comp,u as data};
